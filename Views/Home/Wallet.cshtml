@model IEnumerable<Coin>
@{
    ViewData["Title"] = "Wallet";
    var isIncremental = true;
    if ((decimal)ViewBag.TotalBalance < 1000)
    {
        isIncremental = false;
    }
}
<div class="lg:grid lg:grid-cols-12">
    <div class="lg:col-start-3 lg:col-end-11">
        <div class="flex items-end bg-gradient-to-r @(isIncremental ? "from-green-500 to-green-100" : "from-red-500 to-red-100") text-white rounded-md p-4 mb-6">
            <div class="flex flex-col mr-auto">
                <small class="text-sm text-white/75">Total Balance</small>
                <span class="text-3xl font-bold mt-1">@(((decimal)ViewBag.TotalBalance).SplitNumber3Digits()) <small class="block text-xs">USDT</small></span>
            </div>
            <div class="text-right @(isIncremental ? "text-green-600" : "text-red-600")">
                @* TODO: ADD PNL *@
                <div class="flex items-center text-sm @(isIncremental ? "bg-green-100" : "bg-red-300/75") rounded-full px-2 py-1">
                    @if(isIncremental)
                    {
                        <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-3 h-3" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M14 2.5a.5.5 0 0 0-.5-.5h-6a.5.5 0 0 0 0 1h4.793L2.146 13.146a.5.5 0 0 0 .708.708L13 3.707V8.5a.5.5 0 0 0 1 0v-6z"/>
                        </svg>
                    }
                    else
                    {
                        <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-3 h-3" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M14 13.5a.5.5 0 0 1-.5.5h-6a.5.5 0 0 1 0-1h4.793L2.146 2.854a.5.5 0 1 1 .708-.708L13 12.293V7.5a.5.5 0 0 1 1 0v6z"/>
                        </svg>
                    }
                    <span class="ml-2">
                        @(String.Format("{0:0.00}", Math.Abs((decimal)ViewBag.TotalBalance - 1000) / 10))%
                    </span>
                </div>
                <small class="block text-xs font-medium mt-1 mr-2">
                    @(isIncremental ? "+" : "-")
                    $@(String.Format("{0:0.00}", (Math.Abs((decimal)ViewBag.TotalBalance - 1000))))
                </small>
            </div>
        </div>

        <div class="col-start-5 col-end-13">
            <h2 class="font-bold text-lg mb-6">Available Coins</h2>
            @foreach (var coin in Model)
            {
                <div class="group flex items-center relative mb-4 lg:mb-6">
                    @if (coin.Symbol != "USDT")
                    {
                        <a asp-action="Trade" asp-route-id="@(coin.Symbol)" class="peer absolute top-0 right-0 bottom-0 left-0"></a>
                    }
                    <div class="border rounded-full transition-colors peer-hover:bg-blue-100/30 p-3">
                        <svg role="img" class="h-6 w-6">
                            <use xlink:href="/img/sprite.svg#coin-@(coin.Symbol)"></use>
                        </svg>
                    </div>
                    <div class="ml-3 mr-auto">
                        <strong class="font-bold">@(coin.Name)</strong>
                        <small class="font-medium text-xs text-gray-400 ml-1 mt-1">@(coin.Symbol)</small>
                        <div>
                            
                            @if (coin.Symbol != "USDT")
                            {
                                <small class="font-medium text-sm text-gray-400 ml-1 mt-1">$@(coin.Price.SplitNumber3Digits())</small>
                                <text>-</text>
                                <a asp-action="Trade" asp-route-id="@(coin.Symbol)" class="text-sm text-blue-500 group-hover:text-blue-700 group-hover:underline">Trade</a>
                            }
                        </div>
                    </div>
                    <div class="flex flex-col text-right">
                        <strong class="font-bold">@(coin.UserBalance.SplitNumber3Digits())</strong>
                        <small class="font-medium text-gray-400 mt-1">$@((coin.UserBalance * coin.Price).SplitNumber3Digits())</small>
                    </div>
                </div>
            }
        </div>
    </div>
</div>